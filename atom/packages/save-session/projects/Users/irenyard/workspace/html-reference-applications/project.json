[{"diskText":"/**\n * Usage:\n * define('module', ['dep1', 'dep2'], function(dep1, dep2) {});\n * require(['module'], function(module1) {});\n */\n\n\"use strict\";\nvar loader = (function() {\n\n    var loader = {},\n        execQueue = [],\n        config,\n        modules,\n        frag;\n\n    modules = loader._modules = {\n        // 'moduleA': {\n        //      'deps': [\"moduleB\", \"moduleC\"],\n        //      'module': function() {}\n        // }\n    };\n\n    config = loader._config = {\n        origin: document.location.origin,\n        path: '/'\n    };\n\n    loader.config = function(name, value) {\n        if (name !== undefined && value !== undefined) {\n            config[name] = value;\n        }\n\n        if (name !== undefined) {\n            return config[name];\n        }\n    };\n\n    loader.define = function(id, deps, module) {\n        // Add module to registry.\n        modules[id] = modules[id] || {};\n\n        modules[id].deps = deps;\n        modules[id].module = module;\n    };\n\n    loader._addToQueue = function(id) {\n        // Use a document fragment to avoid hitting the DOM more than necessary.\n        var elm;\n\n        frag = frag || document.createDocumentFragment();\n        elm = document.createElement('script');\n\n        elm.setAttribute('src', config.origin + config.path + id + '.js');\n        // Try and initialise the modules in the queue once the script has loaded.\n        elm.addEventListener('load', loader._initQueue);\n\n        frag.appendChild(elm);\n    };\n\n    loader._loadScripts = function() {\n        if (frag instanceof window.DocumentFragment) {\n            // Load the scripts in the queue.\n            document.body.appendChild(frag);\n            // Clear the queue.\n            frag = undefined;\n        }\n    };\n\n    loader._loadDeps = function(deps) {\n        var id;\n        for (var i = 0; i < deps.length; i++) {\n            id = deps[i];\n            if (modules[id] !== undefined) {\n                // Module already loaded.\n                continue;\n            }\n            // Set up structure in module registry.\n            modules[id] = {\n                'deps': [],\n                'module': undefined\n            };\n            // Check dependencies.\n            loader._addToQueue(id);\n        }\n        loader._loadScripts();\n    };\n\n    loader._initQueue = function () {\n        execQueue.forEach(function(item) {\n            loader._initModule(item.deps, item.module);\n        });\n    };\n\n    loader._initModule = function(deps, module) {\n        var depModules = [],\n            depsLoaded = true;\n\n        if (Array.isArray(deps) && deps.length > 0) {\n            // Check dependencies are loaded.\n            depsLoaded = deps.every(function(dep) {\n                if (modules[dep] !== undefined && modules[dep].module === undefined) {\n                    // Dependency not loaded, try again when scripts load.\n                    return false;\n                }\n                depModules.push(modules[dep].module);\n                return true;\n            });\n        }\n\n        if (depsLoaded === false) {\n            // Add to queue to execute when dependencies have loaded.\n            if (!execQueue.some(function(item) {return item.module === module;})) {\n                execQueue.push({\n                    'deps': deps,\n                    'module': module\n                });\n            }\n            return;\n        }\n\n        module.apply(this, depModules);\n    };\n\n    loader.require = function(deps, module) {\n        // If deps is a single element, make it into an array.\n        if (!(deps instanceof Array)) {\n            deps = [deps];\n        }\n        loader._loadDeps(deps);\n        loader._initModule(deps, module);\n    };\n\n    // Assign globals.\n    window.define = loader.define;\n    window.require = loader.require;\n\n    return loader;\n})();\n","text":"/**\n * Usage:\n * define('module', ['dep1', 'dep2'], function(dep1, dep2) {});\n * require(['module'], function(module1) {});\n */\n\n\"use strict\";\nvar loader = (function() {\n\n    var loader = {},\n        execQueue = [],\n        config,\n        modules,\n        frag;\n\n    modules = loader._modules = {\n        // 'moduleA': {\n        //      'deps': [\"moduleB\", \"moduleC\"],\n        //      'module': function() {}\n        // }\n    };\n\n    config = loader._config = {\n        origin: document.location.origin,\n        path: '/'\n    };\n\n    loader.config = function(name, value) {\n        if (name !== undefined && value !== undefined) {\n            config[name] = value;\n        }\n\n        if (name !== undefined) {\n            return config[name];\n        }\n    };\n\n    loader.define = function(id, deps, module) {\n        // Add module to registry.\n        modules[id] = modules[id] || {};\n\n        modules[id].deps = deps;\n        modules[id].module = module;\n    };\n\n    loader._addToQueue = function(id) {\n        // Use a document fragment to avoid hitting the DOM more than necessary.\n        var elm;\n\n        frag = frag || document.createDocumentFragment();\n        elm = document.createElement('script');\n\n        elm.setAttribute('src', config.origin + config.path + id + '.js');\n        // Try and initialise the modules in the queue once the script has loaded.\n        elm.addEventListener('load', loader._initQueue);\n\n        frag.appendChild(elm);\n    };\n\n    loader._loadScripts = function() {\n        if (frag instanceof window.DocumentFragment) {\n            // Load the scripts in the queue.\n            document.body.appendChild(frag);\n            // Clear the queue.\n            frag = undefined;\n        }\n    };\n\n    loader._loadDeps = function(deps) {\n        var id;\n        for (var i = 0; i < deps.length; i++) {\n            id = deps[i];\n            if (modules[id] !== undefined) {\n                // Module already loaded.\n                continue;\n            }\n            // Set up structure in module registry.\n            modules[id] = {\n                'deps': [],\n                'module': undefined\n            };\n            // Check dependencies.\n            loader._addToQueue(id);\n        }\n        loader._loadScripts();\n    };\n\n    loader._initQueue = function () {\n        execQueue.forEach(function(item) {\n            loader._initModule(item.deps, item.module);\n        });\n    };\n\n    loader._initModule = function(deps, module) {\n        var depModules = [],\n            depsLoaded = true;\n\n        if (Array.isArray(deps) && deps.length > 0) {\n            // Check dependencies are loaded.\n            depsLoaded = deps.every(function(dep) {\n                if (modules[dep] !== undefined && modules[dep].module === undefined) {\n                    // Dependency not loaded, try again when scripts load.\n                    return false;\n                }\n                depModules.push(modules[dep].module);\n                return true;\n            });\n        }\n\n        if (depsLoaded === false) {\n            // Add to queue to execute when dependencies have loaded.\n            if (!execQueue.some(function(item) {return item.module === module;})) {\n                execQueue.push({\n                    'deps': deps,\n                    'module': module\n                });\n            }\n            return;\n        }\n\n        module.apply(this, depModules);\n    };\n\n    loader.require = function(deps, module) {\n        // If deps is a single element, make it into an array.\n        if (!(deps instanceof Array)) {\n            deps = [deps];\n        }\n        loader._loadDeps(deps);\n        loader._initModule(deps, module);\n    };\n\n    // Assign globals.\n    window.define = loader.define;\n    window.require = loader.require;\n\n    return loader;\n})();\n","active":false,"path":"/Users/irenyard/workspace/html-reference-applications/IPCRB Reference Application/public_html/js/loader.js","scroll":87.93333333333334,"cursor":{"row":0,"column":0}},{"diskText":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n    <xsl:output method=\"text\" />\n\n    <xsl:template match=\"/Params\">\n        <xsl:apply-templates select=\"Param[@name='launch_context.ui.youview.com']\" />\n    </xsl:template>\n\n    <!-- Launch Portal -->\n    <xsl:template match=\"Param[.='portal']\">\n        <xsl:value-of select=\"../Param[@name='urlbase.application.youview.com']\" />\n        <xsl:text>iplayer/</xsl:text>\n    </xsl:template>\n\n    <!-- Launch Content (Deep Link) -->\n    <xsl:template match=\"Param[starts-with(.,'content')]\">\n        <xsl:value-of select=\"../Param[@name='urlbase.application.youview.com']\" />\n        <xsl:text>iplayer/#tv/playback/</xsl:text>\n        <xsl:value-of select=\"../Param[@name='epid.bbc.co.uk']\" />\n        <xsl:if test=\"../Param[@name='sign_language.publication.youview.com'] = '1'\" >\n            <xsl:text>/signed</xsl:text>\n        </xsl:if>\n    </xsl:template>\n\n    <!-- Launch CRB -->\n    <xsl:template match=\"Param[.='broadcast.mheg']\">\n        <xsl:value-of select=\"../Param[@name='urlbase.broadcast.youview.com']\" />\n        <xsl:value-of select=\"../Param[@name='location.broadcast.youview.com']\" />\n    </xsl:template>\n  \n  <!-- Launch BBC Application Selector -->\n  <xsl:template match=\"Param[.='isp']\">\n    <xsl:text>http://filegateway.youview.co.uk/applications/dev/duncan/html/BBCAppSelector.html</xsl:text>\n  </xsl:template>\n</xsl:stylesheet>","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n    <xsl:output method=\"text\" />\n\n    <xsl:template match=\"/Params\">\n        <xsl:apply-templates select=\"Param[@name='launch_context.ui.youview.com']\" />\n    </xsl:template>\n\n    <!-- Launch Portal -->\n    <xsl:template match=\"Param[.='portal']\">\n        <xsl:value-of select=\"../Param[@name='urlbase.application.youview.com']\" />\n        <xsl:text>iplayer/</xsl:text>\n    </xsl:template>\n\n    <!-- Launch Content (Deep Link) -->\n    <xsl:template match=\"Param[starts-with(.,'content')]\">\n        <xsl:value-of select=\"../Param[@name='urlbase.application.youview.com']\" />\n        <xsl:text>iplayer/#tv/playback/</xsl:text>\n        <xsl:value-of select=\"../Param[@name='epid.bbc.co.uk']\" />\n        <xsl:if test=\"../Param[@name='sign_language.publication.youview.com'] = '1'\" >\n            <xsl:text>/signed</xsl:text>\n        </xsl:if>\n    </xsl:template>\n\n    <!-- Launch CRB -->\n    <xsl:template match=\"Param[.='broadcast.mheg']\">\n        <xsl:value-of select=\"../Param[@name='urlbase.broadcast.youview.com']\" />\n        <xsl:value-of select=\"../Param[@name='location.broadcast.youview.com']\" />\n    </xsl:template>\n  \n  <!-- Launch BBC Application Selector -->\n  <xsl:template match=\"Param[.='isp']\">\n    <xsl:text>http://filegateway.youview.co.uk/applications/dev/duncan/html/BBCAppSelector.html</xsl:text>\n  </xsl:template>\n</xsl:stylesheet>","active":false,"path":"/Users/irenyard/Downloads/test-redbuttonhtml/launch_url.xsl","scroll":2.066666666666667,"cursor":{"row":0,"column":0}},{"diskText":"<!DOCTYPE html>\n<html>\n<head>\n    <title></title>\n</head>\n<body>\n    <script src=\"/js/loader.js\"></script>\n    <script>\n        \"use strict\";\n        (function(define) {\n            require(['test/module'], function(module) {\n                module();\n            });\n            // define('test/module', [], function(module) {\n            //\n            // });\n        })(window.define);\n    </script>\n</body>\n</html>\n","text":"<!DOCTYPE html>\n<html>\n<head>\n    <title></title>\n</head>\n<body>\n    <script src=\"/js/loader.js\"></script>\n    <script>\n        \"use strict\";\n        (function(define) {\n            require(['test/module'], function(module) {\n                module();\n            });\n            // define('test/module', [], function(module) {\n            //\n            // });\n        })(window.define);\n    </script>\n</body>\n</html>\n","active":false,"path":"/Users/irenyard/workspace/html-reference-applications/IPCRB Reference Application/public_html/loader.html","scroll":2.0666666666666664,"cursor":{"row":10,"column":21}},{"diskText":"(function(define) {\n    \"use strict\";\n    define('test/module', function() {\n        alert('');\n    });\n})(window.define);\n","text":"(function(define) {\n    \"use strict\";\n    define('test/module', function() {\n        alert('');\n    });\n})(window.define);\n","active":false,"path":"/Users/irenyard/workspace/html-reference-applications/IPCRB Reference Application/public_html/test/module.js","scroll":2.066666666666667,"cursor":{"row":3,"column":15}},{"diskText":"<!DOCTYPE html>\n<html>\n<head>\n    <title>IPCRB Reference Application</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n    <!-- build:css css/app.min.css -->\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/app.css\" />\n    <!-- endbuild -->\n\n</head>\n<body class=\"viewport\">\n\n    <!-- video objects -->\n    <video id=\"html5Video\"></video>\n\n    <div id=\"vbVideoContainer\">\n        <object id=\"vbVideo\" type=\"video/broadcast\"></object>\n    </div>\n\n    <!-- Application views -->\n    <div id=\"view\"></div>\n\n    <!-- build:js1 js/app.min.js -->\n    <!-- <script src=\"js/bootstrap.js\"></script> -->\n    <script src=\"js/loader.js\"></script>\n\n    <script>\n        (function() {\n            \"use strict\";\n            define('module', [], function() {\n                alert('');\n            });\n\n            require(['module'], function(module) {\n                module();\n            })\n        })();\n    </script>\n\n    <script>\n        window.crb = {\n            'loader': {\n                'load': function() {}\n            }\n        };\n    </script>\n\n    <script src=\"js/configs/keys.js\"></script>\n\n    <script src=\"js/stubs/videoBroadcastStub.js\"></script>\n    <script src=\"js/stubs/promiseStub.js\"></script>\n    <script src=\"js/stubs/applicationStateStub.js\"></script>\n    <script src=\"js/stubs/defaultChannelData.js\"></script>\n\n    <script src=\"js/framework/view.js\"></script>\n\n    <script src=\"js/controllers/videoController.js\"></script>\n    <script src=\"js/controllers/scrollController.js\"></script>\n\n    <script src=\"js/models/channelModel.js\"></script>\n    <script src=\"js/controllers/channelController.js\"></script>\n\n    <script src=\"js/mode/fullMode.js\"></script>\n    <script src=\"js/mode/redButtonMode.js\"></script>\n\n    <script src=\"js/models/applicationViewModel.js\"></script>\n    <script src=\"js/controllers/viewController.js\"></script>\n\n    <script src=\"js/view/channelMenu.js\"></script>\n    <script src=\"js/view/redButton.js\"></script>\n\n    <script src=\"js/template.js\"></script>\n\n    <script>\n        crb.viewController.init();\n    </script>\n    <!-- endbuild -->\n</body>\n</html>\n","text":"<!DOCTYPE html>\n<html>\n<head>\n    <title>IPCRB Reference Application</title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n    <!-- build:css css/app.min.css -->\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/app.css\" />\n    <!-- endbuild -->\n\n</head>\n<body class=\"viewport\">\n\n    <!-- video objects -->\n    <video id=\"html5Video\"></video>\n\n    <div id=\"vbVideoContainer\">\n        <object id=\"vbVideo\" type=\"video/broadcast\"></object>\n    </div>\n\n    <!-- Application views -->\n    <div id=\"view\"></div>\n\n    <!-- build:js1 js/app.min.js -->\n    <!-- <script src=\"js/bootstrap.js\"></script> -->\n    <script src=\"js/loader.js\"></script>\n\n    <script>\n        (function() {\n            \"use strict\";\n            define('module', [], function() {\n                alert('');\n            });\n\n            require(['module'], function(module) {\n                module();\n            })\n        })();\n    </script>\n\n    <script>\n        window.crb = {\n            'loader': {\n                'load': function() {}\n            }\n        };\n    </script>\n\n    <script src=\"js/configs/keys.js\"></script>\n\n    <script src=\"js/stubs/videoBroadcastStub.js\"></script>\n    <script src=\"js/stubs/promiseStub.js\"></script>\n    <script src=\"js/stubs/applicationStateStub.js\"></script>\n    <script src=\"js/stubs/defaultChannelData.js\"></script>\n\n    <script src=\"js/framework/view.js\"></script>\n\n    <script src=\"js/controllers/videoController.js\"></script>\n    <script src=\"js/controllers/scrollController.js\"></script>\n\n    <script src=\"js/models/channelModel.js\"></script>\n    <script src=\"js/controllers/channelController.js\"></script>\n\n    <script src=\"js/mode/fullMode.js\"></script>\n    <script src=\"js/mode/redButtonMode.js\"></script>\n\n    <script src=\"js/models/applicationViewModel.js\"></script>\n    <script src=\"js/controllers/viewController.js\"></script>\n\n    <script src=\"js/view/channelMenu.js\"></script>\n    <script src=\"js/view/redButton.js\"></script>\n\n    <script src=\"js/template.js\"></script>\n\n    <script>\n        crb.viewController.init();\n    </script>\n    <!-- endbuild -->\n</body>\n</html>\n","active":false,"path":"/Users/irenyard/workspace/html-reference-applications/IPCRB Reference Application/public_html/index.html","scroll":2.066666666666667,"cursor":{"row":32,"column":26}}]